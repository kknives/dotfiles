set nocompatible

set number relativenumber
set hidden

" swap files (.swp) in a common location
" // means use the file's full path
set dir=~/.vim/_swap//

" backup files (~) in a common location if possible
set backup
set backupdir=~/.vim/_backup/,~/tmp,.

" turn on undo files, put them in a common location
set undofile
set undodir=~/.vim/_undo/

let g:lightline = {
      \ 'colorscheme': 'deus',
      \ }
set laststatus=2
set noshowmode

nnoremap <F7> :bprev<CR>
nnoremap <F8> :bnext<CR>
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>
nnoremap <Leader>y :call system('xclip -selection clipboard', @0)<CR>

autocmd FileType c,cpp,objc nnoremap <buffer><Leader>cf :<C-u>ClangFormat<CR>
autocmd FileType c,cpp,objc vnoremap <buffer><Leader>cf :ClangFormat<CR>
nmap , <Plug>RDSendLine
vmap , <Plug>RDSendSelection
vmap ,e <Plug>RESendSelection

" Clang-format options
let g:clang_format#code_style = "mozilla"

" Omni Completion
filetype plugin on
set omnifunc=syntaxcomplete#Complete
let g:NERDSpaceDelims = 1
" Mark spaces with a ·
" :set listchars=space:·
" :set list

" More natural splitting
set splitbelow
set splitright

" Use spaces instead of tabs
set expandtab

" Be smart when using tabs 
set smarttab

" 1 tab == 4 spaces
set shiftwidth=2
set tabstop=2

" Enable syntax highlighting for python
let g:python_highlight_all = 1
" Setup vim-plug

if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Define plugins
call plug#begin()

Plug 'preservim/nerdcommenter'
Plug 'tmux-plugins/vim-tmux-focus-events'
Plug 'roxma/vim-tmux-clipboard'
Plug 'kana/vim-operator-user'
Plug 'rhysd/vim-clang-format'
Plug 'tpope/vim-unimpaired'
Plug 'arzg/vim-colors-xcode'
Plug 'tpope/vim-surround'
Plug 'ap/vim-buftabline'
Plug 'tpope/vim-obsession'
Plug 'vim-python/python-syntax'
"Plug 'jalvesaq/Nvim-R'
Plug 'itchyny/lightline.vim'
Plug 'xolox/vim-misc'
"Plug 'xolox/vim-notes'
Plug 'elixir-editors/vim-elixir'
Plug 'JuliaEditorSupport/julia-vim'
Plug 'bfrg/vim-cpp-modern'

call plug#end()

" Defining theme
syntax on
colorscheme xcodedark

